name: release-lambda

on:
  release:
    types: [created]

jobs:
  build-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: ./
          file: ./runtimes/aws_lambda/Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository }}/lambda:latest,ghcr.io/${{ github.repository }}/lambda:${{ github.ref_name }},ghcr.io/${{ github.repository }}/lambda:${{ github.sha }}

  build-zip:
    name: Build x86_64 Lambda Zip
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goarch: [amd64, arm64]
    steps:
      - uses: actions/checkout@v4
      - uses: wangyoucao577/go-release-action@v1
        env:
          CGO_ENABLED: 0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: linux
          goarch: ${{ matrix.goarch }}
          build_flags: -tags lambda.norpc
          project_path: "./runtimes/aws_lambda"
          binary_name: "bootstrap"
          extra_files: LICENSE README.md
          compress_assets: zip
          asset_name: "fc-aws-lambda-${{ matrix.goarch }}-${{ github.ref_name }}.zip"
